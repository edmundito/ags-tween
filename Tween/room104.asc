// Point Tests (room 104) script file

#ifdef SCRIPT_API_v3507
function runTween(Point* p, int startX, int startY, int endX, int endY, TweenStyle style) {
  p.x = startX;
  p.y = startY;
  
  if (startX != endX && startY != endY) {
    p.TweenPosition(0.5, endX, endY, eEaseLinearTween, style);
  }
  else if (startX != endX) {
    p.TweenX(0.5, endX, eEaseLinearTween, style);
  }
  else {
    p.TweenY(0.5, endY, eEaseLinearTween, style);
  }
}

function runPointTest(int startX, int startY, int endX, int endY) {
  Point* p = new Point;
  
  runTween(p, startX, startY, endX, endY, eBlockTween);
  
  ExpectIntToBe(p.x, endX, "x");
  ExpectIntToBe(p.y, endY, "y");
  
  runTween(p, startX, startY, endX, endY, eNoBlockTween);
  p.StopTweenPosition(eFinishTween);
  
  ExpectIntToBe(p.x, endX, "stop x");
  ExpectIntToBe(p.y, endY, "stop y");
}

function testPointPosition() {
  Test("Point.Position");
  runPointTest(-1000, -2500, 2000, 3400);
  
  Test("Point.X");
  runPointTest(-1000, 0, 2000, 0);
  
  Test("Point.Y");
  runPointTest(0, -2500, 0, 3400);
}

function testStopAll() {
  Test("Point.StopAll");
  Point* p = new Point;
  int endX = 1234;
  int endY = 5678;
  
  runTween(p, 0, 0, endX, endY, eNoBlockTween);
  p.StopAllTweens(eFinishTween);
  
  ExpectIntToBe(p.x, endX, "stop x");
  ExpectIntToBe(p.y, endY, "stop y");
}
#endif

function room_Load() {
  
}

function room_AfterFadeIn() {
#ifdef SCRIPT_API_v3507
  StartCutscene(eSkipESCOnly);
  
  testPointPosition();
  
  EndCutscene();
#endif
#ifndef SCRIPT_API_v3507
  Display("Point is only supported on Script API v30507 or above.");
#endif
  
  player.ChangeRoom(99);
}

function room_Leave() {

}
