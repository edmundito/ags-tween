// TERMS OF USE - AGS TWEEN MODULE (ags-tween)
//
// Copyright (c) 2009-present Edmundo Ruiz Ghanem
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the "Software"), to deal in
// the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE

float GetDistance(int fromX, int fromY, int toX, int toY) {
  return TweenMaths.GetDistance(fromX, fromY, toX, toY);
}

function TweenStopAll(TweenStopResult result) {
  Tween.StopAll(result);
}

function WaitForTweensToStop() {
  Tween.WaitForAllToFinish();
}

int TweenGamma(float seconds, short toGamma, Tween1Timing timing, TweenStyle style) {
  return System.TweenGamma(seconds, toGamma, timing, style, 0.0, eTweenSeconds);
}

int TweenViewportPosition(float seconds, short toX, short toY, Tween1Timing timing, TweenStyle style) {
  #ifdef SCRIPT_API_v350
  return Game.Camera.TweenPosition(seconds, toX, toY, timing, style, 0.0, eTweenSeconds);
  #endif
  #ifndef SCRIPT_API_v350
  return TweenViewport(seconds, toX, toY, timing, style, 0.0, eTweenSeconds);
  #endif
}
int TweenViewportPositionBySpeed(float speed, short toX, short toY, Tween1Timing timing, TweenStyle style) {
  #ifdef SCRIPT_API_v350
  return Game.Camera.TweenPosition(speed, toX, toY, timing, style, 0.0, eTweenSpeed);
  #endif
  #ifndef SCRIPT_API_v350
  return TweenViewport(speed, toX, toY, timing, style, 0.0, eTweenSpeed);
  #endif
}

int TweenTintR(this Region*, float seconds, short toR, Tween1Timing timing, TweenStyle style) {
  return this.TweenTintRed(seconds, toR, timing, style, 0.0, eTweenSeconds);
}
int TweenTintG(this Region*, float seconds, short toG, Tween1Timing timing, TweenStyle style) {
  return this.TweenTintGreen(seconds, toG, timing, style, 0.0, eTweenSeconds);
}
int TweenTintB(this Region*, float seconds, short toB, Tween1Timing timing, TweenStyle style) {
  return this.TweenTintBlue(seconds, toB, timing, style, 0.0, eTweenSeconds);
}
int TweenTintAmount(this Region*, float seconds, short toAmount, Tween1Timing timing, TweenStyle style) {
  return this.TweenTintSaturation(seconds, toAmount, timing, style, 0.0, eTweenSeconds);
}
int TweenTintBlackAndWhite(this Region*, float seconds, Tween1Timing timing, TweenStyle style) {
  return this.TweenTint(seconds, 255, 255, 255, 100, this.TintLuminance, timing, style, 0.0, eTweenSeconds);
}

int TweenColorR(this Label*, float seconds, short toR, Tween1Timing timing, TweenStyle style) {
  return this.TweenTextColorRed(seconds, toR, timing, style, 0.0, eTweenSeconds);
}
int TweenColorG(this Label*, float seconds, short toG, Tween1Timing timing, TweenStyle style) {
  return this.TweenTextColorGreen(seconds, toG, timing, style, 0.0, eTweenSeconds);
}
int TweenColorB(this Label*, float seconds, short toB, Tween1Timing timing, TweenStyle style) {
  return this.TweenTextColorBlue(seconds, toB, timing, style, 0.0, eTweenSeconds);
}
int TweenColorR(this Button*, float seconds, short toR, Tween1Timing timing, TweenStyle style) {
  return this.TweenTextColorRed(seconds, toR, timing, style, 0.0, eTweenSeconds);
}
int TweenColorG(this Button*, float seconds, short toG, Tween1Timing timing, TweenStyle style) {
  return this.TweenTextColorGreen(seconds, toG, timing, style, 0.0, eTweenSeconds);
}
int TweenColorB(this Button*, float seconds, short toB, Tween1Timing timing, TweenStyle style) {
  return this.TweenTextColorBlue(seconds, toB, timing, style, 0.0, eTweenSeconds);
}

int TweenSelectedItem(this ListBox*, float seconds, short toSelectedItem, Tween1Timing timing, TweenStyle style) {
  return this.TweenSelectedIndex(seconds, toSelectedItem, timing, style, 0.0, eTweenSeconds);
}

int TweenPositionBySpeed(this Character*, float speed, short toX, short toY, Tween1Timing timing, TweenStyle style) {
  return this.TweenPosition(speed, toX, toY, timing, style, 0.0, eTweenSpeed);
}

int TweenPositionBySpeed(this Object*, float speed, short toX, short toY, Tween1Timing timing, TweenStyle style) {
  return this.TweenPosition(speed, toX, toY, timing, style, 0.0, eTweenSpeed);
}

int TweenPositionBySpeed(this GUI*, float speed, short toX, short toY, Tween1Timing timing, TweenStyle style) {
  return this.TweenPosition(speed, toX, toY, timing, style, 0.0, eTweenSpeed);
}

int TweenPositionBySpeed(this GUIControl*, float speed, short toX, short toY, Tween1Timing timing, TweenStyle style) {
  return this.TweenPosition(speed, toX, toY, timing, style, 0.0, eTweenSpeed);
}

int TweenPositionBySpeed(this Label*, float speed, short toX, short toY, Tween1Timing timing, TweenStyle style) {
  return this.TweenPosition(speed, toX, toY, timing, style, 0.0, eTweenSpeed);
}

int TweenPositionBySpeed(this Button*, float speed, short toX, short toY, Tween1Timing timing, TweenStyle style) {
  return this.TweenPosition(speed, toX, toY, timing, style, 0.0, eTweenSpeed);
}

int TweenPositionBySpeed(this TextBox*, float speed, short toX, short toY, Tween1Timing timing, TweenStyle style) {
  return this.TweenPosition(speed, toX, toY, timing, style, 0.0, eTweenSpeed);
}

int TweenPositionBySpeed(this ListBox*, float speed, short toX, short toY, Tween1Timing timing, TweenStyle style) {
  return this.TweenPosition(speed, toX, toY, timing, style, 0.0, eTweenSpeed);
}

int TweenPositionBySpeed(this Slider*, float speed, short toX, short toY, Tween1Timing timing, TweenStyle style) {
  return this.TweenPosition(speed, toX, toY, timing, style, 0.0, eTweenSpeed);
}

int TweenPositionBySpeed(this InvWindow*, float speed, short toX, short toY, Tween1Timing timing, TweenStyle style) {
  return this.TweenPosition(speed, toX, toY, timing, style, 0.0, eTweenSpeed);
}

int TweenColorR(this TextBox*, float seconds, short toR, Tween1Timing timing, TweenStyle style) {
  return this.TweenTextColorRed(seconds, toR, timing, style, 0.0, eTweenSeconds);
}
int TweenColorG(this TextBox*, float seconds, short toG, Tween1Timing timing, TweenStyle style) {
  return this.TweenTextColorGreen(seconds, toG, timing, style, 0.0, eTweenSeconds);
}
int TweenColorB(this TextBox*, float seconds, short toB, Tween1Timing timing, TweenStyle style) {
  return this.TweenTextColorBlue(seconds, toB, timing, style, 0.0, eTweenSeconds);
}
